package com.yk;

import java.util.ArrayList;

public class AddTwoList {

	public static class ListNode {
		int val;
		ListNode next;
		ListNode(int x) { val = x; }
	 }
	 
	
	public static void main(String[] args) {
		ListNode l1 = new ListNode(2);
		ListNode n2 = new ListNode(4);
		ListNode n3 = new ListNode(3);
		l1.next = n2;
		n2.next = n3;
		n3.next = null;
		
		ListNode l2 = new ListNode(5);
		ListNode n4 = new ListNode(6);
		ListNode n5 = new ListNode(4);
		l2.next = n4;
		n4.next = n5;
		n5.next = null;

		ListNode l3ListNode =  addTwoNumbers(l1,l2);
		
		while (l3ListNode != null) {
			System.out.println(l3ListNode.val);
			l3ListNode = l3ListNode.next;
		}
		
	}
	
	 public int lengthOfLongestSubstring(String s) {
		if (s.length() == 0 || s == null) {
			return 0;
		}
		ArrayList<char> arrayList = s.toCharArray();
		
		
		return 0;
	 }
	
	/**		
		输入：(2 -> 4 -> 3) + (5 -> 6 -> 4)
		输出：7 -> 0 -> 8
		原因：342 + 465 = 807
	 */
	
	public static ListNode addTwoNumbers(ListNode l1, ListNode l2) {
		 ListNode preListNode = new ListNode(0);
		 int carry = 0;
		 ListNode curListNode = preListNode;
		 while (l1 != null || l2!= null) {
			int x = l1 == null ? 0 : l1.val;
			int y = l2 == null ? 0 : l2.val;
			int sum = x + y + carry;
			carry = sum - 10 < 0 ? 0 : 1;
			sum = sum - 10 < 0 ? sum : sum - 10;			
			curListNode.next = new ListNode(sum);
			curListNode = curListNode.next;
			
			if (l1 != null) {
				l1 = l1.next;
			}
			if (l2 != null) {
				l2 = l2.next;
			} 
		}
		 if (carry > 0) {
			curListNode.next = new ListNode(carry);
		}
		return preListNode.next;
    }
	
}
